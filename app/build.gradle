plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.ksp) // You can use KSP for other libraries
}

android {
    namespace 'com.example.hcahealthcaretask'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.hcahealthcaretask"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout


    // RxJava and RxKotlin
    implementation libs.rxjava
    implementation libs.rxandroid
    implementation libs.rxkotlin

    // Retrofit for networking
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.adapter.rxjava3

    // Dagger core
    implementation libs.dagger
    ksp(libs.dagger.compiler) // Use ksp to process the Dagger annotations

    // Dagger Android (optional, if you're using it)
    implementation libs.dagger.android
    implementation libs.dagger.android.support
    ksp( libs.dagger.android.processor)

    // ViewModel and LiveData
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.livedata.ktx

    // DataBinding and ViewBinding
    implementation libs.androidx.viewbinding

    // RecyclerView
    implementation libs.androidx.recyclerview

    // Paging
    implementation libs.androidx.paging.runtime

    // Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    // Navigation components
    implementation libs.androidx.fragment.ktx // Fragment support
    implementation libs.androidx.navigation.fragment.ktx.v271 // Navigation component
    implementation libs.androidx.navigation.ui.ktx // Navigation UI component

    //Recycler View
    implementation libs.androidx.recyclerview

    //picasso for load images
    implementation libs.picasso

    // For unit tests
    testImplementation libs.junit
    testImplementation libs.mockito.core
    testImplementation libs.mockito.inline
    testImplementation libs.kotlin.mockito.kotlin
    testImplementation libs.rxjava
    testImplementation libs.rxkotlin

    testImplementation libs.androidx.core.testing
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

}